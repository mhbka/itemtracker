name: Backend + embedder deployment
on:
  push:
    branches: [ main ]
    paths:
      - 'packages/monolith/**'
  workflow_dispatch:
jobs:
  build_backend:
    name: Build and push backend image
    runs-on: ubuntu-latest
    if: needs.check_image.outputs.image_exists == 'false'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/backend/build-push
        with:
          commit_sha: ${{ github.sha }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PAT: ${{ secrets.DOCKER_HUB_PAT }}
  build_embedder:
    name: Build and push embedder image
    runs-on: ubuntu-latest
    needs: [build_backend]
    if: needs.check_image.outputs.image_exists == 'false'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/embedder/build-push
        with:
          commit_sha: ${{ github.sha }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PAT: ${{ secrets.DOCKER_HUB_PAT }}
  deploy:
    name: Deploy both services
    runs-on: ubuntu-latest
    needs: [build_embedder]
    if: always() && (needs.check_image.outputs.image_exists == 'true' || needs.build.result == 'success')
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/backend_and_embedder/deploy
        with:
          commit_sha: ${{ github.sha }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PAT: ${{ secrets.DOCKER_HUB_PAT }}
          GCP_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_CREDENTIALS }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}